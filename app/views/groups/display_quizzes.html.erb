<link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css" rel="stylesheet" type="text/css"/>
<script src="http://popcornjs.org/code/dist/popcorn-complete.js"></script>
<script src="http://www.youtube.com/iframe_api" type="text/javascript"></script>
  
  <script>
  var current_lecture=0;
  var current_quiz=0;
  var num_of_lectures= <%= @num_lectures %>
  var num_of_quizzes= <%= @num_quizzes %>
  var player;
  var done = false;
  var first_quiz;
  $(document).ready(function() {
	
  });
  
  window.onresize=function resizeit(){

	h=$("#resizable").height();
	
	setup_screens();
	setup_buttons(h);
	
	
};

setup_chart = function(the_id)
{	
	var colors = Highcharts.getOptions().colors;
        chart = new Highcharts.Chart({
            chart: {
                renderTo: 'the_chart',
                type: 'bar',
            },
            title: {
                text: null, 
            },
            xAxis: {
                categories: getCategories(the_id),
                labels:{
                	style:{
                		fontSize:'16px'
                	}
                }
            },
            yAxis: {
                title: {
                    text: 'Number of Students'
                },
                allowDecimals:false
            },
            legend: {
            	enabled:false
	    	},
            plotOptions: {
                column: {
                    //cursor: 'pointer',
                    dataLabels: {
                        enabled: true,
                        color: colors[0],
                        style: {
                            fontWeight: 'bold'
                        },
                        formatter: function() {
                            return this.y;// +'%';
                        }
                    }
                }
            },
            tooltip: {
                formatter: function() {
                    var point = this.point,
                        s = this.x +':<b>'+ this.y;// +'% market share</b><br/>';
                   
                    return s;
                }
            },
            series: [{
                name: getName(the_id),
                data: getSeries(the_id, colors),
                color: 'white'
            }]
        });
}

function getCategories(id)
  {
  	var studentProgress= <%= raw @module_categories.to_json %>
  		return studentProgress[id]	
  }
  function getName(id)
  {
  	var studentProgress= <%= raw @module_questions.to_json %>
  	return studentProgress[id][0]
        
  }
 function getSeries(id,colors)
	{
		
	var studentProgress= <%= raw @module_new.to_json %>
	var studentColors= <%= raw @module_colors.to_json %>
       // x=[{"name":'Correct', "data":[], "color":[]}, {"name":'Incorrect', "data":[], "color":[]}]
        x=[]
        chart_data= studentProgress[id]   //[2,3,4]
        chart_colors= studentColors[id]   //[2,3,4]
        for(var key in chart_data)  // only once // key here is the json key (not number like with array)
        {	
        	var z= chart_data[key]  //z=2
        	var color= chart_colors[key]
        	
        		x[key]={color: color,"y": z}
        	
        }
        
        console.debug(x)
        return x
}  
setup_button_width= function()
{
	$("#minus_3").width($("#previous").width());
	$("#plus_3").width($("#previous").width());
	$("#next").width($("#previous").width());
}

setup_screens = function()
{
	h=$("#resizable").height();
	width = h*16.0/9.0;
	wbig=$("#big_div").width();
	if(width!=$("#resizable").width())
	{
		$("#resizable").width(width)
		remaining= wbig-width;
		$("#left").width(remaining/2.0 - 30)
		$("#right").width(remaining/2.0 - 30)
	}
	
	if($("#resizable").width() + 260 > $("#top").width()) // does not maintain 16:9 aspect ratio anymore.
	{
		$("#resizable").width(wbig-260)
		$("#left").width(100)
		$("#right").width(100)
	}
	
	player.setSize($("#resizable").width(), $("#resizable").height());
}
setup_buttons = function(h)
{
	//left
	new_minus_position= h/2.0 - 30;
	$("#minus_3").css("margin-top",new_minus_position+"px");
	
	new_previous_position= 10;
	$("#previous").css("margin-top",new_previous_position+"px");
	
	new_minus_position= $("#left").width()/2.0 - 35; 
	$("#minus_3").css("margin-left",new_minus_position+"px");
	
	new_previous_position= $("#left").width()/2.0 -35; 
	$("#previous").css("margin-left",new_previous_position+"px");
	
	//right
	new_minus_position= h/2.0 - 30;
	$("#plus_3").css("margin-top",new_minus_position+"px");
	
	new_previous_position= 10;
	$("#next").css("margin-top",new_previous_position+"px");
	
	new_minus_position= $("#right").width()/2.0 - 35; 
	$("#plus_3").css("margin-left",new_minus_position+"px");
	
	new_previous_position= $("#right").width()/2.0 -35; 
	$("#next").css("margin-left",new_previous_position+"px");
	
}

setup_video = function()
{
	lectures= <%= raw @lecture_list.to_json %>
	console.log(lectures)
	display=<%= raw @display_data.to_json %>
	
	for(var elem in lectures)
	{
		url=lectures[elem]
			if(display[url].length!=0)
			{
				first_lecture= url
				first_quiz= display[url][0][0] // first quiz . first parameter
				current_lecture= parseInt(elem)+1;
				current_quiz= parseInt(display[url][0][1]); //first quiz . second parameter
				$("#the_question").text(display[url][0][2]);
				setup_chart(display[url][0][3]);
				setup_position_text(); // setting text in top left corner.
				break; 
			}
		
	}
	
	console.log(lectures);
	pop = Popcorn.youtube( "#resizable", first_lecture, {controls: 0}); //youtube unlike normal html5 needs to be run from a webserver
	//pop.controls( false );                         
	console.log(pop);
	
	pop.on("loadeddata", function() {
		pop.pause();
		pop.currentTime(parseInt(first_quiz));
		pop.controls( false );   
		$(".html5-video-controls").css("display","none"); 
		console.log(pop);
		console.log(pop.currentTime());
		 });
	
}


function onYouTubeIframeAPIReady() {
	lectures= <%= raw @lecture_list.to_json %>
	console.log(lectures)
	display=<%= raw @display_data.to_json %>
	
	for(var elem in lectures)
	{
		url=lectures[elem]
			if(display[url].length!=0)
			{
				first_lecture= url
				first_quiz= display[url][0][0] // first quiz . first parameter
				current_lecture= parseInt(elem)+1;
				current_quiz= parseInt(display[url][0][1]); //first quiz . second parameter
				$("#the_question").text(display[url][0][2]);
				setup_chart(display[url][0][3]);
				setup_position_text(); // setting text in top left corner.
				break; 
			}
		
	}
	   var v=first_lecture.split("=")[1].split("&")[0]
      	console.log("in here");
        player = new YT.Player('resizable', {
          //height: '390',
          //width: '640',
          videoId: v,
          playerVars: {"showinfo":0,"modestbranding":0,'autoplay': 1, 'controls': 0},//showinfo:0
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });


	h=$("#resizable").height();	
	
	setup_screens();
	setup_buttons(h)
	setup_button_width();
	//setup_video();
	setup_video2();
	setup_actions();

}

function onPlayerReady(event) {
        //event.target.playVideo();
        console.log(first_quiz)
        event.target.seekTo(first_quiz);
        console.log(event.target.getCurrentTime());
        
 }    
function onPlayerStateChange(){
	console.log("here "+player.getPlayerState());
	if(player.getPlayerState()==1)
	{
		console.log("here in playing")
		player.pauseVideo();
	}
}

setup_video2=function()
{
  
      
}
 

// function onPlayerStateChange(event) {
    // if (event.data == YT.PlayerState.PLAYING && !done) {
      // setTimeout(stopVideo, 6000);
      // done = true;
    // }
// }

function stopVideo() {
   player.stopVideo();
}

setup_position_text = function()
{
	$("#q_num").html("Q:"+current_quiz+"/"+num_of_quizzes);
	$("#lec_num").html("L:"+current_lecture+"/"+num_of_lectures);
}

get_next_quiz = function()
{
	var done=0;
	old_lecture=current_lecture;
	lectures= <%= raw @lecture_list.to_json %>
	display=<%= raw @display_data.to_json %>
	
	lec= current_lecture - 1;
	q= current_quiz;
	
	for(var elem in lectures)
	{
		if(elem<lec)
			continue;
			url=lectures[elem]
			if(display[url].length!=0)
			{
				lec_quizzes= display[url]
				for(elem2 in lec_quizzes)
				{
					quiz=lec_quizzes[elem2]
					console.log(quiz)
					console.log("current quiz is "+current_quiz);
					if(quiz[1]<= current_quiz)
						{continue;}
					else{
						first_lecture= url
						first_quiz= quiz[0] // first quiz . first parameter
						current_lecture= parseInt(elem)+1;
						current_quiz= parseInt(quiz[1]); //first quiz . second parameter
						$("#the_question").text(quiz[2]);
						setup_chart(quiz[3]);
						setup_position_text(); // setting text in top left corner.
						done=1;
						break;
					}
						
				}
				
			}
		if(done==1)
			break;
	}
	
	if(old_lecture!=current_lecture)
	{
	// $("#resizable").html("");
	// pop = Popcorn.youtube( "#resizable", first_lecture); //youtube unlike normal html5 needs to be run from a webserver
	// pop.controls( false );                         
	// console.log(pop);
// 	
	// pop.on("loadeddata", function() {
		// pop.pause();
		// pop.currentTime(parseInt(first_quiz));
		// $(".html5-video-controls").css("display","none");
		// console.log(pop);
		// console.log(pop.currentTime());
		 // });
		var v=first_lecture.split("=")[1].split("&")[0]
      	console.log("in here");
        player.loadVideoById(v);
		player.seekTo(first_quiz);
		player.playVideo();
	}
	else{
		
		// pop.pause();
		// pop.currentTime(parseInt(first_quiz));
		// console.log(pop);
		// console.log(pop.currentTime());
		player.seekTo(first_quiz);
		player.playVideo();
		 
	}
	
}

get_previous_quiz = function()
{
	var done=0;
	old_lecture=current_lecture;
	lectures= <%= raw @lecture_list.to_json %>
	display=<%= raw @display_data.to_json %>
	
	lec= current_lecture - 1;
	q= current_quiz;
	
	if(current_quiz== 1)
		return;
	
	for(var i=lectures.length-1; i>=0; i--)
	{
		if(i>lec)
			continue;
			url=lectures[i]
			if(display[url].length!=0)
			{
				lec_quizzes= display[url]
				for(var j=lec_quizzes.length-1; j>=0; j--)
				{
					quiz=lec_quizzes[j]
					console.log(quiz);
					if(quiz[1]>= current_quiz)
						{continue;}
					else{
						first_lecture= url
						first_quiz= quiz[0] // first quiz . first parameter
						current_lecture= parseInt(i)+1;
						current_quiz= parseInt(quiz[1]); //first quiz . second parameter
						$("#the_question").text(quiz[2]);
						setup_chart(quiz[3]);
						setup_position_text(); // setting text in top left corner.
						done=1
						break;
					}
						
				}
				
			}
			if(done==1)
			break;
		
	}
	
	if(old_lecture!=current_lecture)
	{
		var v=first_lecture.split("=")[1].split("&")[0]
      	console.log("in here");
        player.loadVideoById(v);
		player.seekTo(first_quiz);
		player.playVideo();
	}
	else{
		
		player.seekTo(first_quiz);
		player.playVideo();
		 
	}
	
	
	
	
}


setup_actions= function()
{
$("#plus_3").click(function(event){
	//pop.currentTime(pop.currentTime()+3);
	console.log(player);
	player.seekTo(player.getCurrentTime()+3);
	player.playVideo();
	console.log(player.getCurrentTime());
});
$("#minus_3").click(function(event){
	//pop.currentTime(pop.currentTime()-3);
	player.seekTo(player.getCurrentTime()-3);
	player.playVideo();
});
$("#next").click(function(event){
	if(current_quiz== num_of_quizzes)
	{
		console.log("current is "+current_quiz)
		return;
	}
	get_next_quiz();
});
$("#previous").click(function(event){
	if(current_quiz== 1)
		return;
	get_previous_quiz();
});
}

 </script>
  <style>
  	#q_num, #lec_num{
  		font-size: 16px;
  	}
  </style>
<div id="pos" style="position:absolute"><b id="q_num"></b><br/><b id="lec_num"></b></div>
<div id="big_div" style="width:100%;height:100%; background-color:white">
<div style="display: block; height: 60%; width: 100%;" id="top"><div id="left" style="height: 100%; min-width: 100px; display: inline-block;vertical-align: top;"><%= link_to "-3 sec", "", :remote => true, :class => "btn btn-primary", :id => "minus_3" %><%= link_to "Previous", "", :remote => true, :class => "btn btn-primary", :id => "previous" %></div><div id="resizable" style="margin-top: 0px; height: 100%; background-color: gray; width: 428.444px; display: inline-block;"></div><div id="right" style="height: 100%; min-width: 100px; display: inline-block;vertical-align: top;"><%= link_to "+3 sec", "", :remote => true, :class => "btn btn-primary", :id => "plus_3" %><%= link_to "Next", "", :remote => true, :class => "btn btn-primary", :id => "next" %></div></div>
<div id="below" style="display:block;width:100%;height:40%;background-color:white;">
	<div id="the_question" style="display:inline;font-size:28px;margin-top:10px;line-height:30px;height:100%;width:40%;"></div>
	<div id="the_chart" style="width:60%;height:100%;background-color:white;float:right;display:inline;"></div>
</div>

</div>